package draw.Model;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;

import javax.swing.BorderFactory;
import javax.swing.border.Border;

import draw.Utils.ShapeBorderSize;

public class EllipseShape extends draw.Model.Shape {
	
	public EllipseShape(Rectangle rect) {
	        super(rect);
	    }

	public EllipseShape(draw.Model.EllipseShape rectangle) {
	    }

	/**
	 * �������� �� ������������� �� ����� point ��� �������������. � ������ ��
	 * ������������ ���� ����� ���� �� �� ���� �����������, ������ ������������
	 * ������� � ���� �� ����������� ���� Shape, ����� ��������� ���� ������� � �
	 * ���������� ������������ �� �������� (� ��� ������� � �������� � ���� ������).
	 */
	@Override
	public boolean Contains(Point point) {
		if (super.Contains(point)) {
			// �������� ���� � � ������ ����, ��� ������� � � ���������� ������������.
			// � ������ �� ������������ - �������� ������� true
			Rectangle r = getRectangle();
			int a = 4; // semi-major axis -> Find 
			int b = 5; // semi-minor axis 

			return (this.isPointInEllipse(r.getCenterX(), r.getCenterY(), r.x, r.y, a, b) <= 1);
		} else {
			return false;
		}
	}

	/**
	 * ������, ������������� ���������� ��������.
	 */
	@Override
	public void DrawSelf(Graphics grfx) {
		super.DrawSelf(grfx);
		Rectangle r = getRectangle();
		grfx.setColor(getFillColor());
		grfx.fillOval(r.x, r.y, r.width, r.height);
		grfx.setColor(getBorderColor());
//		ShapeBorder shapeBorder = getBorderSize();
//		shapeBorder.paintBorderOval(null, grfx, r.x, r.y, r.width, r.height, getWidth(), getHeight());
		grfx.drawOval(r.x, r.y, r.width, r.height);
	}
	
    
	private int isPointInEllipse(double h, double k, int x, int y, int a, int b) 
    { 
        int p = ((int)Math.pow((x - h), 2) / (int)Math.pow(a, 2)) 
                + ((int)Math.pow((y - k), 2) / (int)Math.pow(b, 2)); 
      
        return p; 
    } 
}
